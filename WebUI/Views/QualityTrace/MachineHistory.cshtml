@model System.Collections.Generic.List<String>
@section Header{
    <style>
        .maxTitle {
            font-size: 50px;
            font-weight: bolder;
            color: black;
            font-family: 'Microsoft YaHei';
        }

        .minRemark {
            font-size: 30px;
            font-weight: bolder;
        }
    </style>
}
<body>
    <div class="row">
        <div class="col-sm-6">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <i class="fa fa-info-circle"></i> 历史曲线
                </div>
                <div class="panel-body">
                    <div class="echarts" id="chart_od" style="height:480px"></div>
                </div>

            </div>
        </div>
        <div class="col-sm-6">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <i class="fa fa-info-circle"></i> 历史数据
                </div>
                <div class="panel-body" >
                    <span class="maxTitle">皮厚: <span id="skin_thick_max"></span>mm<span class="minRemark">（最大）</span></span><br />
                    <span class="maxTitle"><span style="visibility:hidden">皮厚: </span><span id="skin_thick_min"></span>mm<span class="minRemark">（最小）</span></span><br />
                    <hr />
                    <span class="maxTitle">凹凸: <span id="aotu"></span></span><br />
                    <hr />
                    <span class="maxTitle">报警: 无</span><br />
                    <span class="maxTitle">火花: <span id="fire"></span></span>
                    <hr />
                </div>

            </div>
          
        </div>
    </div>
</body>

@section Footer{
@Scripts.Render("~/Scripts/highstock")
    <script>
        var searchArray = @Html.Raw(Json.Encode(Model));
        var specCode = {};
        specCode.outterOd= 2;
        specCode.innerOd = 41;
        specCode.meter = 5;
        specCode.aotu = 38;
        specCode.fire = 39;

        var cond = {};
        var chartOd = {};
        cond.axisNum = searchArray[0];
        cond.machineId = searchArray[1];

        $(function(mcAdmin){
            //highcharts时差问题
            Highcharts.setOptions({ global: { useUTC: false } });
           
            $.post("/QualityTrace/GetMahineHistoryDataAction/",{cond:cond},function(retData){
                mcAdmin.dealRetData(retData,function(){
                    var  allData = retData.Appendix;
                    var  numRegexp = /\d+\.?\d/;

                    allData.map(data=>{
                        data.CollectedTime = +data.CollectedTime.match(numRegexp)[0];
                        try{
                            data.CollectedValue=+data.CollectedValue;
                        }catch(e){
                            console.error(data.CollectedValue)
                        }
                        return data; 
                    })
                    var outterOd = getSpecParamData(allData, specCode.outterOd);
                    var innerOd = getSpecParamData(allData,specCode.innerOd);
                    console.log("innerOd",innerOd);
                    console.log("outterOd",outterOd)
                    var aotu = getSpecParamData(allData,specCode.aotu).pop();
                    var fire = getSpecParamData(allData,specCode.fire).length;
                    $("#fire").html(fire+"次");
                   
                    $("#aotu").html(aotu.CollectedValue);
                    $("#skin_thick_max").html(clacThick(outterOd,innerOd).max)
                    $("#skin_thick_min").html(clacThick(outterOd,innerOd).min)
                     
                    var outterChartData  = [];
                    outterOd.forEach(data=>{
                        outterChartData.push([data.CollectedTime,data.CollectedValue]);
                    })
                    console.log(outterChartData[0])
                    chartOd = initChartPline({maxValue:20,minValue:-10,symbol:'mm',title:"外径值"},"chart_od",[{
                        name:"外径值",
                        data:outterChartData,
                        tooltip:{
                            valueDecimals:2
                        }
                    }]);



                })
            })

            function initChartPline(p,chartId,chartSeries){
                var maxValue = p.maxValue;
                var minValue = p.minValue;
                var valueSuffix = p.symbol;
  

                return new Highcharts.StockChart({
                    chart : {
                        renderTo:chartId,
                        type:'spline',
                        //边框
                        borderWidth: 2,
                        borderRadius: 15,
                        height:480
                    },
                    ////缩放按钮
                    rangeSelector: {
                        buttons: [{
                            count: 10,
                            type: 'second',
                            text: '10s'
                        }, {
                            count: 5,
                            type: 'minute',
                            text: '5M'
                        }, {
                            type: 'all',
                            text: 'ALL'
                        }],
                        inputEnabled: false,
                        selected: 0
                    },
                    yAxis: {
                        title: {
                            text: valueSuffix
                        },
                  
                        tickInterval: 2,
                    },
                    xAxis:{
                        type: 'datetime',
                    },
                    //点击事件
                    plotOptions: {
                        series: {
                            cursor: 'pointer',
                        }
                    },
                    title : {
                        text : p.title,
                    },
                    subTitle:{
                        text:p.title,
                    },
                    exporting: {
                        enabled: false
                    },
                    series :chartSeries
     ,
                    //提示框
                    tooltip : {
                        formatter : function() {
                            var content = '<span style="font-size: 10px;">' + this.x + '</span><br/>';
                            content = '';
                            for (var i = 0; i < this.points.length; i++) {
                                var maxValue = this.points[i].series.maxValue;
                                var minValue = this.points[i].series.minValue;
                                var color = "black";
                                if(this.points[i].y<minValue){
                                    color = warningColor;
                                }else if(this.points[i].y > maxValue ){
                                    color=errorColor;
                                }
                                //采集值
                                content += '<span>' + this.points[i].series.name + '</span>: <span style="color:'+color+'">' + this.points[i].y.toFixed(2) +valueSuffix +'</span><br/>';

                            };
                            var date = new Date(this.x);
                            if(typeof(this.points[0].series.curMeters) != "undefined"){
                                content += '<br/><span>米数: '+this.points[0].series.curMeters+'米</span>'
                            }
                            content += '<br/><span>' +(date.getFullYear())+"-"+(date.getMonth())+"-"+(date.getDay())+" | "+(date.getHours() ) +':' + (date.getMinutes()  ) + ':' + (date.getSeconds()  )  + '</span>'
                            return content +"</a>";
                        },

                    }
                })

            }


            function getSpecParamData(allData,id){
                return allData.filter(data=>{return data.ParameterCodeID == id;})
            }

            function clacThick(outterOd,innerOd){
                var errorMark = "";
                var outterLimit = {};
                var innerLimit = {};
                try{
                    errorMark = "外径值出错"
                    outterLimit = getLimitCollected(outterOd);
                    errorMark = "内径值出错"
                    innerLimit = getLimitCollected(innerOd);

                }catch(e){
                    return {max:errorMark,min:errorMark}
                }

                return {max:outterLimit.max - innerLimit.min,min:outterLimit.min - innerLimit.max}
            }
            function getLimitCollected(array){
                if(array == null || array.length == 0){
                    throw new Error("传入数据有问题");
                }
                var max = -1;
                var min = 1;
                array.forEach(data=>{
                    if(data.CollectedValue > max){
                        max = data.CollectedValue;
                    }
                    if(data.CollectedValue < min){
                        min = data.CollectedValue;
                    }
                })

                return {max:max,min:min}
            }

        }(window.parent.mcAdmin))

    </script>
}