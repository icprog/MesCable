@model System.Collections.Generic.List<String>
@section Header{
    <style>
        .maxTitle {
            font-size: 40px;
            font-weight: bolder;
            color: black;
            font-family: 'Microsoft YaHei';
        }

        .minRemark {
            font-size: 20px;
            font-weight: bolder;
        }

        hr {
            margin-top: 5px
        }
    </style>
}
<body>

    <div class="row">
        <div class="col-sm-6">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <i class="fa fa-info-circle"></i>机台信息
                </div>
                <div class="panel-body">
                    <span class="maxTitle">机台名称: <span id="machine_name" style="color:blue"></span></span>

                    <span class="maxTitle" id="machine_info_fill" style="visibility:hidden"><span style="visibility:hidden">皮厚: </span><span style="color:blue"></span>mm<span class="minRemark">（最小）</span></span><br />
                    <hr />
                    <span class="maxTitle"><span>轴号: </span><span id="axis_num" style="color:darkgreen"></span></span>
                    <hr />
                    <span class="maxTitle">盘号: <span id="print_code" style="color:orange">无</span></span>
                    <hr />
                    <span class="maxTitle">颜色: <span id="axis_color" style="color:black"></span></span><br />

                </div>

            </div>
        </div>
        <div class="col-sm-6">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <i class="fa fa-info-circle"></i> 历史数据
                </div>
                <div class="panel-body">
                    <span class="maxTitle">皮厚: <span id="skin_thick_max" style="color:blue"></span>mm<span class="minRemark">（最大）</span></span>
                    <span class="maxTitle" id="skin_min"><span id="skin_thick_min" style="color:blue"></span>mm<span class="minRemark">（最小）</span></span><br />
                    <hr />
                    <span class="maxTitle" id="skin_min"><span>人员: </span><span id="employee" style="color:darkgreen"></span></span><br />
                    <hr />
                    <span class="maxTitle">报警: <span style="color:orange" id="alarm_times"></span></span><hr />
                    <span class="maxTitle">火花: <span id="fire" style="color:red"></span></span>

                </div>

            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <i class="fa fa-info-circle"></i>历史曲线
                </div>
                <div class="panel-body">
                    <div class="echarts" id="chart_od" style="height:300px"></div>
                </div>

            </div>
        </div>
    </div>
</body>

@section Footer{
    @Scripts.Render("~/Scripts/highstock")
    <script>
        var searchArray = @Html.Raw(Json.Encode(Model));
        var specCode = {};
        specCode.outterOd= 2;
        specCode.innerOd = 42;
        specCode.meter = 5;
        specCode.aotu = 38;
        specCode.fire = 39;

        var cond = {};
        var chartOd = {};
        var notFound = "无";
        cond.axisNum = searchArray[0];
        cond.machineId = searchArray[1];
        cond.machineName = searchArray[2] != "" ? searchArray[2]:notFound;
        cond.axisColor = searchArray[3] != "" ? searchArray[3]: notFound;
        cond.printCode = searchArray[4] != "" ? searchArray[4] : notFound;
        cond.employee = (searchArray[5] != "abc123" && searchArray[5] != "") ? searchArray[5] : notFound;
        cond.machineType = searchArray[6];
        console.log(cond)

        $(function(mcAdmin){

            function setMachineInfo(){
                $("#machine_name").html(cond.machineName);
                $("#axis_color").html(cond.axisColor);
                $("#print_code").html(cond.printCode);
                $("#axis_num").html(cond.axisNum);
            }

            function exitByError(e) {
                console.error(e);
                swal({
                    title:"数据出错",
                    text:"该机台数据没有记录，或者出现异常",
                    type:"error",
                    showConfirmButton:true,
                    confirmButtonText:"确定"
                },function(isConfirm){
                    mcAdmin.closeCurrentTab();
                })
            }
            //highcharts时差问题
            Highcharts.setOptions({ global: { useUTC: false } });
            //将重复的时间往后移一秒
            function uniqueTime(data){
                var uniqueHash = {};
                var uniqueData = [];
                function unique(element){
                    var timeP = "p"+element[0];
                    if(uniqueHash[timeP] != true){
                        uniqueData.push(element);
                        uniqueHash[timeP] = true;
                    }else{
                        element[0] += 1000;
                        unique(element);
                    }

                }
                for(var i =0;i<data.length;++i){
                    unique(data[i]);
                }
                return uniqueData;
            }

            $.post("/QualityTrace/GetMahineHistoryDataAction/",{cond:cond},function(retData){
                mcAdmin.dealRetData(retData,function(){
                    var  allData = retData.Appendix;
                    var numRegexp = /\d+\.?\d/;
                    setMachineInfo();
                    allData.map(data=>{
                        try{
                            data.CollectedTime = +data.CollectedTime.match(numRegexp)[0];
                            data.CollectedValue=+data.CollectedValue;
                        }catch(e){
                            exitByError(e);
                        }
                        return data;
                    })

                    var outterOd = getSpecParamData(allData, specCode.outterOd);
                    var innerOd = getSpecParamData(allData, specCode.innerOd);
                    var aotu = getSpecParamData(allData,specCode.aotu).pop();
                    var fire = getSpecParamData(allData, specCode.fire).filter(d => d.CollectedValue != "0").length;

                    try{
                        $("#employee").html(cond.employee);
                        $("#fire").html(fire + "次");
                        var spec = retData.Content;
                        var alarm = getAlarmTimes(outterOd, spec.upper, spec.lower);
                        $("#alarm_times").html(alarm.lenght + "次");
                        var thick = clacThick(outterOd, innerOd);
                        $("#skin_thick_max").html(thick.max.toFixed(2))
                        $("#skin_thick_min").html(thick.min.toFixed(2));

                    }catch(e){
                        $("#skin_thick_max").html(clacThick(outterOd, innerOd).max)
                    }
                    var outterChartData  = [];
                    outterOd.forEach(data=>{
                        outterChartData.push([data.CollectedTime,data.CollectedValue]);
                    })
                    outterChartData = uniqueTime(outterChartData);
                    if(outterChartData.length == 0){
                        exitByError();
                    }
                    var title = "OD值"

                    chartOd = initChartPline({
                        limitMax: spec.upper,
                        limitMin: spec.lower,
                        maxValue: alarm.maxValue,
                        minValue: alarm.minValue,
                        symbol: 'mm', title: title
                    }, "chart_od", [{
                        name:title,
                        data:outterChartData,
                        tooltip:{
                            valueDecimals:2
                        },
                        zones: [{
                            value: spec.lower,
                            color: 'red',
                        }, {
                            value: spec.upper,
                                color:'green'
                            }, {
                                value: alarm.maxValue,
                                color:'red'
                        }]
                    }]);
                })
            })

            function initChartPline(p,chartId,chartSeries){
                var maxValue = p.maxValue;
                var minValue = p.minValue;
                var limitMax = p.limitMax;
                var limitMin = p.limitMin;
                var valueSuffix = p.symbol;
                console.log(p)

                return new Highcharts.StockChart({
                    chart : {
                        renderTo:chartId,
                        type:'spline',
                        //边框
                        borderWidth: 2,
                        borderRadius: 15,
                        height:300
                    },
                    ////缩放按钮
                    rangeSelector: {
                        buttons: [{
                            count: 10,
                            type: 'second',
                            text: '10s'
                        }, {
                            count: 5,
                            type: 'minute',
                            text: '5M'
                        }, {
                            type: 'all',
                            text: 'ALL'
                        }],
                        inputEnabled: false,
                        selected: 0
                    },
                    yAxis: {
                        max: maxValue,
                        min: minValue,
                        title: {
                            text: valueSuffix
                        },

                        tickInterval: 0.1,
                        plotLines: [{
                            value: limitMax,
                            color: 'orange',
                            width:2,
                            label: {
                                text: "最大值: " + limitMax+"mm"
                            }
                        }, {
                            value: limitMin,
                            color: 'orange',
                            width:2,
                            label: {
                                text: "最小值: " + limitMin+"mm"
                            }
                        }]
                    },
                    xAxis:{
                        type: 'datetime',
                    },
                    //点击事件
                    plotOptions: {
                        series: {
                            cursor: 'pointer',
                        }
                    },
                    title : {
                        text : p.title,
                    },
                    subTitle:{
                        text:p.title,
                    },
                    exporting: {
                        enabled: false
                    },
                    series :chartSeries
     ,
                    //提示框
                    tooltip : {
                        formatter : function() {
                            var content = '<span style="font-size: 10px;">' + this.x + '</span><br/>';
                            content = '';
                            for (var i = 0; i < this.points.length; i++) {
                                var color = "black";
                                if (this.points[i].y < limitMin) {
                                    color = warningColor;
                                } else if (this.points[i].y > limitMax) {
                                    color=errorColor;
                                }
                                //采集值
                                content += '<span>' + this.points[i].series.name + '</span>: <span style="color:'+color+'">' + this.points[i].y.toFixed(2) +valueSuffix +'</span><br/>';

                            };
                            var date = new Date(this.x);
                            if(typeof(this.points[0].series.curMeters) != "undefined"){
                                content += '<br/><span>米数: '+this.points[0].series.curMeters+'米</span>'
                            }
                            content += '<br/><span>' +(date.getFullYear())+"-"+(date.getMonth())+"-"+(date.getDay())+" | "+(date.getHours() ) +':' + (date.getMinutes()  ) + ':' + (date.getSeconds()  )  + '</span>'
                            return content +"</a>";
                        },

                    }
                })

            }


            function getSpecParamData(allData,id){
                return allData.filter(data=>{return data.ParameterCodeID == id;})
            }

            function getAlarmTimes(outterOd, max, min) {
                var valueMax = max;
                var valueMin = min;
                var alarm = outterOd.filter(data => {
                     if (data.CollectedValue > valueMax) {
                            valueMax = data.CollectedValue;
                        }
                        if (data.CollectedValue < valueMin) {
                              valueMin = data.CollectedValue;
                        }
                        if (data.CollectedValue > max) {
                            return true;
                        } else if (data.CollectedValue < min) {
                            return true;

                        }
                        return false;
                });
                return { lenght: alarm.length, maxValue: valueMax + 0.1 , minValue: valueMin - 0.1 }

            }

            function clacThick(outterOd,innerOd){
                var errorMark = "";
                var outterLimit = {};
                var innerLimit = {};
                try{
                    outterLimit = getLimitCollected(outterOd);
                    innerLimit = getLimitCollected(innerOd);
                    console.log("innerLimit", innerLimit);
                    console.log("outterLimit", outterLimit);
                }catch(e){
                    if(cond.axisNum.indexOf("CP02") != -1){
                        errorMark = "无铜线外径"
                    }
                    else if(cond.axisNum.indexOf("CP05") != -1){
                        errorMark = "无护套内径"
                    } else if (cond.axisNum.indexOf("ZD") != -1) {
                        errorMark = "无护套内径"

                    }
                    $("#skin_min").css("display", "none")
                    $("#machine_info_fill").css("display", "none");
                    return {max:errorMark,min:errorMark}
                }

                return {max:outterLimit.max - innerLimit.min,min:outterLimit.min - innerLimit.max}
            }
            function getLimitCollected(array){
                if(array == null || array.length == 0){
                    throw new Error("传入数据有问题");
                }
                var max = -1;
                var min = 100;
                array.forEach(data=>{
                    try {
                        if (data.CollectedValue > max) {
                            max = data.CollectedValue;
                        }
                        if (data.CollectedValue < min) {
                            min = data.CollectedValue;
                        }
                    }catch(e){}
                })

                return {max:max,min:min}
            }

        }(window.parent.mcAdmin))

    </script>
}